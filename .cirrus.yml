task:
  name: Unit tests and widget tests
  env:
    matrix:
      template: material_bottomnavigation_provider_mobx
      template: material_navigationdrawer_provider_mobx
      template: material_navigationdrawerroutes_provider_mobx
  container:
    image: cirrusci/flutter:stable
  pub_cache:
    folder: ~/.pub-cache
  test_script:
    - cd $template
    - flutter create .
    - flutter pub run build_runner build --delete-conflicting-outputs

task:
  name: Integration tests for $template (Android)
  # only_if: $CIRRUS_PR == ''
  # skip: "!changesInclude('.cirrus.yml', '$template/*', '$template/**/*')"
  env:
    EMULATOR_API_LEVEL: 28
    ANDROID_ABI: "default;x86"
    matrix:
      template: material_bottomnavigation_provider_mobx
      template: material_navigationdrawer_provider_mobx
      template: material_navigationdrawerroutes_provider_mobx
  container:
    image: cirrusci/flutter:stable
    cpu: 4
    memory: 10G
    kvm: true
  pub_cache:
    folder: ~/.pub-cache
  create_native_projects_script:
    - cd $template
    - flutter create .
    - flutter pub run build_runner build --delete-conflicting-outputs
  install_images_script: sdkmanager "system-images;android-$EMULATOR_API_LEVEL;$ANDROID_ABI"
  create_device_script:
    echo no | avdmanager create avd --force -n test -k "system-images;android-$EMULATOR_API_LEVEL;$ANDROID_ABI"
  start_emulator_background_script:
    $ANDROID_HOME/emulator/emulator -no-window -verbose -avd test -no-audio -no-window
  wait_for_emulator_script:
    android-wait-for-emulator
  test_script: 
    - cd $template
    - flutter drive --target=test_driver/app.dart

task:
  name: Integration tests for $template (iOS)
  # only_if: $CIRRUS_PR == ''
  # skip: "!changesInclude('.cirrus.yml', '$template/*', '$template/**/*')"
  osx_instance:
    image: catalina-flutter
  env:
    matrix:
      template: material_bottomnavigation_provider_mobx
      template: material_navigationdrawer_provider_mobx
      template: material_navigationdrawerroutes_provider_mobx
  pub_cache:
    folder: ~/.pub-cache
  create_native_projects_script:
    - cd $template
    - flutter create .
    - flutter pub run build_runner build --delete-conflicting-outputs
  setup_script:
    - xcrun simctl list devicetypes
    - xcrun simctl list runtimes
    # create simulator
    - udid=$(xcrun simctl create "iPhone X" com.apple.CoreSimulator.SimDeviceType.iPhone-X com.apple.CoreSimulator.SimRuntime.iOS-13-5)
    # boot simulator
    - xcrun simctl boot $udid
  test_script: 
    - cd $template
    - flutter drive --target=test_driver/app.dart

